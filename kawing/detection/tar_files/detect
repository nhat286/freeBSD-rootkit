#!/bin/sh

if [ `id -u` -ne 0 ]; then echo "Please run script as root or with sudo." && exit 1 ; fi

# Dispatcher script, for individual stages of detection checkout the stage?.sh files
PERSIST="/usr/local/etc/rc.d/STARTUP.sh"
LOG="/tmp/progress.log"

echo "Checking log ..."
if [ ! -f $LOG ]; then touch $LOG && chmod 777 $LOG; fi

### STAGE 0 ###
    ps ax | grep -v grep | grep STAGE1 > /dev/null
    # If stage1 daemon is not present, enter here
    if [ $? -eq 1 ]
    then
        echo "Executing Stage 0" >> $LOG
        sh ./stage0.sh
        RESULT=$?

        # set stage1 daemon to signal stage 0 complete [REBOOT persistence]
        cmd="daemon -f -t STAGE1 -r sleep 1000"
        echo "$cmd" >> $PERSIST
        eval "$cmd"

        # return the result of this stage (0 or 1)
        exit $RESULT
    fi

### STAGE 1 ###
    ps ax | grep -v grep | grep STAGE2 > /dev/null
    # If stage2 daemon is not present, enter here
    if [ $? -eq 1 ]
    then
        echo "Executing Stage 1" >> $LOG
        sh ./stage1.sh
        RESULT=$?

        # set stage2 daemon to signal stage 1 complete [REBOOT persistence]
        cmd="daemon -f -t STAGE2 -r sleep 1000"
        echo "$cmd" >> $PERSIST
        eval "$cmd"

        # save log before reboot
        cp $LOG /etc/.progress.log
        echo "mv /etc/.progress.log $LOG || echo 'couldn't find/move log file'" >> $PERSIST

        # return the result of this stage (0 or 1)
        exit $RESULT
    fi

# >>> VM is rebooted after this stage <<< #

### STAGE 2 ###
    ps ax | grep -v grep | grep STAGE3 > /dev/null
    # If stage3 daemon is not present, enter here
    if [ $? -eq 1 ]
    then
        echo "Executing Stage 2" >> $LOG
        sh ./stage2.sh
        RESULT=$?

        # set stage3 daemon to signal stage 2 complete [REBOOT persistence]
        cmd="daemon -f -t STAGE3 -r sleep 1000"
        echo "$cmd" >> $PERSIST
        eval "$cmd"

        # return the result of this stage (0 or 1)
        exit $RESULT
    fi

### STAGE 3 ###
    ps ax | grep -v grep | grep STAGE4 > /dev/null
    # If stage4 daemon is not present, enter here
    if [ $? -eq 1 ]
    then
        echo "Executing Stage 3" >> $LOG
        sh ./stage3.sh
        RESULT=$?

        # set stage4 daemon to signal stage 3 complete [REBOOT persistence]
        cmd="daemon -f -t STAGE4 -r sleep 1000"
        echo "$cmd" >> $PERSIST
        eval "$cmd"

        # return the result of this stage (0 or 1)
        exit $RESULT
    fi

### STAGE 4 ###
    ps ax | grep -v grep | grep STAGE5 > /dev/null

    if [ $? -eq 1 ]
    then 
        echo "Executing Stage 4 [Final Stage]" >> $LOG
        sh ./stage4.sh
        RESULT=$?

        # set stage5 daemon to signal stage4 complete [REBOOT persistence]
        cmd="daemon -f -t STAGE5 -r sleep 1000"
        echo "$cmd" >> $PERSIST
        eval "$cmd"
        
        # return result of this stage
       echo -e "==== END OF DETECTION ====\n Rerun again to cleanup and start again !"  
       exit $RESULT
    fi 


### CLEANUP ###

    echo "[!] Removing persistence file" | tee -a $LOG
    rm -f $PERSIST 

    # kill all daemons after complete 
    echo "[!] Killing all present daemons to reset script" | tee -a $LOG
    killall daemon || echo "[! ! !] Failed to kill off daemons" | tee -a $LOG 

    echo "[!] Saving progress to pogress.log.bk" | tee -a $LOG
    cp $LOG "/tmp/progress.log.bk"
    echo "[!] Cleaning log now ..." && echo "" > $LOG 

    echo "[!] Finished."

